<?xml version="1.0"?>
<ruleset name="Wikibase">
	<!-- This rule set includes all rules from the MediaWiki rule set, see
		https://github.com/wikimedia/mediawiki-tools-codesniffer/blob/master/MediaWiki/ruleset.xml
		-->
	<rule ref="./vendor/mediawiki/mediawiki-codesniffer/MediaWiki">
		<!-- Even if we encourage to use spaces in comments, we don't think this sniff should block
			patches from being merged. -->
		<exclude name="MediaWiki.WhiteSpace.SpaceBeforeSingleLineComment" />
	</rule>

	<!-- NOTE: We purposely decided against additional Generic.CodeAnalysis.… sniffs, because they
		all have possible exceptions, and are not meant to block patches from being merged. -->

	<!-- Enforces to use curly brackets after if ( … ) and other control structures, even if only a
		single token follows. -->
	<rule ref="Generic.ControlStructures" />

	<!-- Disallows any content outside of <?php … ?> tags. -->
	<rule ref="Generic.Files.InlineHTML" />

	<rule ref="Generic.Files.LineLength">
		<properties>
			<!-- The inherited "lineLimit" from the base MediaWiki rule set is 100. -->
			<property name="absoluteLineLimit" value="140" />
		</properties>
		<!-- Exclude auto-generated files from the Translate extension, see magic-export.php. -->
		<exclude-pattern>\.i18n\.magic\.php</exclude-pattern>
	</rule>

	<rule ref="Generic.Files.OneClassPerFile" />
	<rule ref="Generic.Files.OneInterfacePerFile" />
	<rule ref="Generic.Files.OneTraitPerFile" />

	<!-- NOTE: Never add the Generic.Metrics.… sniffs to this generic rule set, because these are
		not about "code style", and the exact limits are highly disputable. -->

	<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />

	<!-- See http://www.php-fig.org/psr/psr-1/ -->
	<rule ref="PSR1">
		<!-- Entry points typically have side effects, which is why this sniff is a "should" and not
			a "must" in PSR-1. -->
		<exclude name="PSR1.Files.SideEffects" />
	</rule>
	<rule ref="PSR1.Methods.CamelCapsMethodName">
		<!-- Exclude test methods like "testGivenInvalidInput_methodThrowsException". -->
		<exclude-pattern>tests*Test*\.php</exclude-pattern>
	</rule>

	<!-- Enforces a single blank line at the end of the file. See
		http://www.php-fig.org/psr/psr-2/#files -->
	<rule ref="PSR2.Files" />

	<!-- NOTE: We can not use the Squiz.Arrays.ArrayBracketSpacing sniff because it conflicts with
		the MediaWiki style that encourages to use spaces inside brackets, see
		https://www.mediawiki.org/wiki/Manual:Coding_conventions/JavaScript#Whitespace -->

	<!-- Makes sure self::… is used instead of repeating the class name. -->
	<rule ref="Squiz.Classes.SelfMemberReference" />

	<!-- Makes sure control structures like if ( … ), for ( …; …; … ) etc. properly use spaces. -->
	<rule ref="Squiz.ControlStructures.ControlSignature" />

	<!-- Complains about duplicate parameter names in function headers. -->
	<rule ref="Squiz.Functions.FunctionDuplicateArgument" />

	<rule ref="Squiz.Functions.GlobalFunction" />

	<!-- Currently contains the following sniffs:
		- Everything in a class must have one of the private, protected, or public keywords.
		- Static members can not be called with $this->…. -->
	<rule ref="Squiz.Scope" />

	<!-- NOTE: Do not add the Squiz.Strings.DoubleQuoteUsage sniff. Even if we encourage to prefer
		single quotes, we don't think double quotes should block patches from being merged. -->

	<!-- Disallows spaces in ( int )$var type casts. -->
	<rule ref="Squiz.WhiteSpace.CastSpacing" />

	<!-- Enforces one empty line before and after each method in a class. -->
	<rule ref="Squiz.WhiteSpace.FunctionSpacing">
		<properties>
			<!-- The sniffs default is two empty lines. -->
			<property name="spacing" value="1" />
		</properties>
	</rule>

	<!-- Makes sure operators are surrounded by spaces. This includes comparisons, assignments, and
		calculations like 1 / 60. -->
	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<!-- But we need to allow splitting long lines. -->
			<property name="ignoreNewlines" value="true" />
		</properties>
	</rule>

	<arg name="extensions" value="php" />
	<arg name="encoding" value="UTF-8" />
	<exclude-pattern type="relative">^extensions/</exclude-pattern>
	<exclude-pattern type="relative">^node_modules/</exclude-pattern>
	<exclude-pattern type="relative">^vendor/</exclude-pattern>
</ruleset>
